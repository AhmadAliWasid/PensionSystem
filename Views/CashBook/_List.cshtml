@using Pension.Entities.Helpers
@using WebAPI.Helpers
@model PensionSystem.ViewModels.CashBookVM
@{
    Layout = null;

    decimal selfPension = 0, familyPension = 0, cashReceived = 0, totalCommutation = 0, bankCommission = 0, closingBalance = 0, openingBalance = 0, cashOutWithCheque = 0, tempClosingBalance = 0, finalClosingBalance = 0;
    int voucherNumber = 1;

    var entries = Model.CashBooksEntries ?? new List<CashBook>();
    var cheques = Model.Cheques ?? new List<Cheque>();
    var monthlyPayments = Model.MonthlPayment;
    var commutations = Model.Commutations;
    var arrears = Model.HBLArrears;
    var entryList = Model.CashBookEntryList?.OrderBy(x => x.Month).ToList();

    openingBalance = entries.Where(x => x.Month.Date == Model.Month.Date && x.Particulars.Contains("C/F")).Sum(m => m.Amount);
    cashReceived = entries.Where(x => x.TransactionType == TransactionType.Credit).Sum(x => x.Amount) - openingBalance;
    bankCommission = entries.Where(x => x.TransactionType == TransactionType.Debit).Sum(x => x.Amount);
    totalCommutation = commutations.Sum(x => x.Amount);


}
<div id="cashBook">
    <style>
        tbody tr td:nth-child(3), tbody tr td:nth-child(5) {
            word-wrap: break-word;
            white-space: normal;
        }

        tbody tr td:nth-child(3) {
            max-width: 300px;
        }

        tbody tr td:nth-child(5) {
            max-width: 120px;
        }
    </style>
    <div class="container" id="table-header">
        <div class="row">
            <h3 class="text-center">PESHAWAR ELECTRIC SUPPLY COMPANY LTD.</h3>
            <h4 class="text-center">@Model.Session?.BaseStamp</h4>
            <h5 class="text-center">Cash Book For The Month Of <b>@UserFormat.GetMonthYear(Model.Month)</b></h5>
        </div>
    </div>
    <table class="table table-bordered myTable" id="data-table">
        <thead>
            <tr style="background-color:grey;">
                <th>Cash</th>
                <th>Date</th>
                <th>Particulars</th>
                <th>PPO#</th>
                <th>Period</th>
                <th>V#</th>
                <th>Cheq#</th>
                <th>Bank</th>
                <th>Cash Det.</th>
                <th>Bank <br /> Commis.</th>
                <th>Commut.</th>
                <th>Self</th>
                <th>Family</th>
                <th>Closing Bal.</th>
                <th>Initial</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in entryList)
            {
                if (item.CashBookEntryId != 0)
                {
                    var entry = entries.FirstOrDefault(x => x.Id == item.CashBookEntryId);
                    if (entry != null)
                    {
                        tempClosingBalance += entry.Amount;
                        <tr>
                            <td>@(entry.TransactionType == TransactionType.Credit ? UserFormat.GetAmount(entry.Amount) : "")</td>
                            <td>@UserFormat.GetDate(entry.Month)</td>
                            <td>@entry.Particulars</td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>@(entry.TransactionType == TransactionType.Debit ? UserFormat.GetAmount(entry.Amount) : "")</td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                    }
                }
                if (item.ChequeId != 0)
                {
                    var cheque = cheques.FirstOrDefault(x => x.Id == item.ChequeId);
                    if (cheque != null)
                    {
                        tempClosingBalance -= cheque.Amount;
                        cashOutWithCheque += cheque.Amount;
                        <tr>
                            <td></td>
                            <td>@UserFormat.GetDate(cheque.Date)</td>
                            <td>@cheque.Name</td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>@cheque.Number</td>
                            <td></td>
                            <td>@UserFormat.GetAmount(cheque.Amount)</td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                        foreach (var mp in monthlyPayments.Where(x => x.ChequeId == cheque.Id))
                        {
                            if (mp.Pensioner.Relation.Name == "Self") selfPension += mp.Total;
                            else familyPension += mp.Total;
                            <tr>
                                <td></td>
                                <td></td>
                                <td>@mp.Pensioner.Claimant</td>
                                <td>@mp.Pensioner.PPOSystem</td>
                                <td></td>
                                <td>@voucherNumber</td>
                                <td>-</td>
                                <td>@mp.Branch.Bank.ShortName</td>
                                <td></td>
                                <td></td>
                                <td>-</td>
                                <td>@(mp.Pensioner.Relation.Name == "Self" ? UserFormat.GetAmount(mp.Total) : "")</td>
                                <td>@(mp.Pensioner.Relation.Name != "Self" ? UserFormat.GetAmount(mp.Total) : "")</td>
                                <td ></td>
                                <td ></td>
                            </tr>
                            voucherNumber++;
                        }
                        foreach (var comm in commutations.Where(x => x.ChequeId == cheque.Id))
                        {
                            <tr>
                                <td></td>
                                <td></td>
                                <td>@comm.Pensioner.Claimant <span>(Commutation)</span></td>
                                <td>@comm.Pensioner.PPOSystem</td>
                                <td></td>
                                <td>@voucherNumber</td>
                                <td>-</td>
                                <td ></td>
                                <td ></td>
                                <td>-</td>
                                <td>@UserFormat.GetAmount(comm.Amount)</td>
                                <td ></td>
                                <td ></td>
                                <td ></td>
                                
                            </tr>
                        }
                        int tempPPONumber = 0;
                        foreach (var arr in arrears.Where(x => x.ChequeId == cheque.Id))
                        {
                            if (arr.Pensioner.Relation.Name == "Self") selfPension += arr.Amount;
                            else familyPension += arr.Amount;
                            <tr>
                                <td></td>
                                <td></td>
                                <td>@arr.Pensioner.Claimant <br />@arr.Description</td>
                                <td>@arr.Pensioner.PPOSystem</td>
                                <td>@UserFormat.GetDate(arr.FromMonth) to @UserFormat.GetDate(arr.ToMonth)</td>
                                <td>
                                    @(tempPPONumber != arr.Pensioner.PPOSystem ? voucherNumber.ToString() : "-")
                                </td>
                                <td>-</td>
                                <td>@arr.Branch.Bank.ShortName</td>
                                <td ></td>
                                <td ></td>
                                <td></td>
                                <td>@(arr.Pensioner.Relation.Name == "Self" ? UserFormat.GetAmount(arr.Amount) : "")</td>
                                <td>@(arr.Pensioner.Relation.Name != "Self" ? UserFormat.GetAmount(arr.Amount) : "")</td>
                                <td ></td>
                                <td ></td>
                            </tr>
                            if (tempPPONumber != arr.Pensioner.PPOSystem) voucherNumber++;
                            tempPPONumber = arr.Pensioner.PPOSystem;
                        }
                    }
                }
            }
            @{
            finalClosingBalance = cashReceived + openingBalance - (bankCommission + selfPension + familyPension + totalCommutation);
            }
            <tr>
                <th>@UserFormat.GetAmount(cashReceived + openingBalance)</th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
                <th>@UserFormat.GetAmount(cashOutWithCheque)</th>
                <th>@UserFormat.GetAmount(bankCommission)</th>
                <th>@UserFormat.GetAmount(totalCommutation)</th>
                <th>@UserFormat.GetAmount(selfPension)</th>
                <th>@UserFormat.GetAmount(familyPension)</th>
                <th>@UserFormat.GetAmount(finalClosingBalance)</th>
                <th></th>
            </tr>
        </tbody>
    </table>
    <div id="table-footer">
        <div class="container">
            <div class="col-md-12">
                <table class="table table-bordered">
                    <thead>
                        <tr><th style="text-align: end; background-color:lightgray;">Opening Balance</th><th>@UserFormat.GetAmount(openingBalance)</th></tr>
                        <tr><th style="text-align: end;background-color:lightgray;">Reciepts During The Month</th><th>@UserFormat.GetAmount(cashReceived)</th></tr>
                        <tr><th style="text-align: end; background-color:lightgray;">Total</th><th>@UserFormat.GetAmount(cashReceived + openingBalance)</th></tr>
                        <tr><th style="text-align: end;background-color:lightgray;">Total Expenditure During the Month</th><th>@UserFormat.GetAmount(familyPension + selfPension + bankCommission + totalCommutation)</th></tr>
                        <tr><th style="text-align: end;background-color:lightgray;">Closing Balance</th><th>@UserFormat.GetAmount(finalClosingBalance)</th></tr>
                    </thead>
                </table>
            </div>
        </div>
        <div class="container">
            @if (Model.Session != null)
            {
                <div class="row" style="margin-top: 200px;">
                    <div class="col-6">
                        <p class="text-center">@Model.Session.AMStamp</p>
                        <p class="text-center" style="margin-top: -20px;">@Model.Session.BaseStamp</p>
                    </div>
                    <div class="col-6">
                        <div>
                            <p class="text-center">@Model.Session.DMStamp</p>
                            <p class="text-center" style="margin-top: -20px;">@Model.Session.BaseStamp</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script>
    $(function () {
        var dataTable = $("#data-table").DataTable({
            responsive: true,
            sorting: false,
            lengthChange: false,
            autoWidth: false,
            buttons: [
                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).prepend($('#table-header').html());
                        $(win.document.body).append($("#table-footer").html());
                        $(win.document.body).find('table').addClass('compact').css('font-size', 'inherit');
                        var css = '@@page { size: landscape; }', head = win.document.head || win.document.getElementsByTagName('head')[0], style = win.document.createElement('style');
                        style.type = 'text/css'; style.media = 'print';
                        if (style.styleSheet) style.styleSheet.cssText = css;
                        else style.appendChild(win.document.createTextNode(css));
                        head.appendChild(style);
                    },
                    title: '',
                    message: '<div class="text-center">Cash Book</div>',
                },
                'excel', 'copy', 'csv', 'pdf'
            ],
        });
        dataTable.buttons().container().appendTo('#data-table_wrapper .col-md-6:eq(0)');
    });
</script>