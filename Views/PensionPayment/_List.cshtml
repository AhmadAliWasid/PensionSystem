@using Pension.Entities.Helpers
@using WebAPI.Helpers
@model PensionSystem.ViewModels.PensionerPaymentViewModel

@if (Model?.PayablesThisMonth != null && Model?.LastMonthList != null)
{
    var totalAmount = Model.AmountVerified;
    var serial = 1;
    var netPayable = 0m;
    var totalDifference = 0m;

    <div class="card">
        <div class="card-header">
            <div class="card-title">
                <h4>Demand List</h4>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Bank</th>
                            <th>Amount</th>
                            <th>Count</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.BankDemandVMs != null)
                        {
                            var tTotal = 0m;
                            var iCount = 0;
                            foreach (var item in Model.BankDemandVMs)
                            {
                                tTotal += item.Amount;
                                iCount += item.Count;
                                <tr>
                                    <td>@item.BankName</td>
                                    <td>@UserFormat.GetAmount(item.Amount)</td>
                                    <td>@item.Count</td>
                                </tr>
                            }
                            <tr>
                                <td><strong>Total</strong></td>
                                <td><strong>@UserFormat.GetAmount(tTotal)</strong></td>
                                <td><strong>@iCount</strong></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div id="list-pensioners">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Verified: @Model.Verified & Amount: @UserFormat.GetAmount(Model.AmountVerified)</th>
                        </tr>
                    </thead>
                </table>
                <div id="table-header">
                    <div class="container">
                        @if (Model.Session != null)
                        {
                            <div class="row">
                                <div class="col-12">
                                    <h4 class="text-center">@Model.Session.DMStamp @Model.Session.BaseStamp</h4>
                                    <h5 class="text-center">List Of Pensioner for the Month of @UserFormat.GetMonthYear(Model.Month)</h5>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <table class="table table-bordered" id="datatable-table">
                    <thead>
                        <tr>
                            <th>Action</th>
                            <th>Certificate</th>
                            <th>Physically</th>
                            <th>S#</th>
                            <th>PPO#</th>
                            <th>Claimant</th>
                            <th>Bank</th>
                            <th>MP</th>
                            <th>CMA</th>
                            <th>Orderly</th>
                            <th>Recovery</th>
                            <th>Total</th>
                            <th>L.Month</th>
                            <th>Payable</th>
                            <th>Remarks</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.PayablesThisMonth)
                        {
                            var lastMonthPensioner = Model.LastMonthList.FirstOrDefault(x => x.PensionerId == item.PensionerId);
                            var Tempdifference = lastMonthPensioner != null ? item.NetPension - lastMonthPensioner.NetPension : item.NetPension;
                            totalDifference += Tempdifference;
                            var relationId = item.Pensioner.RelationId;
                            var rowColor = (item.CertificateVerified || item.NetPension == 0) ? "green" : "red";
                            <tr style="color: @rowColor">
                                <td>
                                    <button class="btn btn-sm btn-warning" onclick="getUpdate(@item.Id)">
                                        <i class="fa fa-edit"></i> Edit
                                    </button>
                                </td>
                                <td>
                                    @if (!item.CertificateVerified)
                                    {
                                        <button type="button" class="btn bg-gradient-primary btn-sm" onclick="verify('Certificate', @item.Id, this)">
                                            <i class="fas fa-check-square"></i> Verify
                                        </button>
                                    }
                                    else
                                    {
                                        <div class="text-green"><i class="fas fa-check-square"></i> Verified</div>
                                    }
                                </td>
                                <td>
                                    @if (item.PhysicallyVerified)
                                    {
                                        <span>Verified</span>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn bg-gradient-warning btn-sm" onclick="verify('Physically', @item.Id, this)">
                                            <i class="fas fa-check-circle"></i> Verify
                                        </button>
                                    }
                                </td>
                                <td>@serial</td>
                                <td>@item.Pensioner.PPOSystem</td>
                                <td>
                                    @if (relationId == 1)
                                    {
                                        <span>@item.Pensioner.Claimant  Ex. @item.Pensioner.Designation</span>
                                    }
                                    else
                                    {
                                        <span>@item.Pensioner.Claimant @item.Pensioner.Relation.Short @item.Pensioner.Name Ex. @item.Pensioner.Designation</span>
                                    }
                                </td>
                                <td>@item.Pensioner.Branch.Bank.ShortName @item.Pensioner.Branch.Code-@item.Pensioner.AccountNumber</td>
                                <td>@UserFormat.GetAmount(item.MonthlyPension)</td>
                                <td>@UserFormat.GetAmount(item.CMA)</td>
                                <td>@UserFormat.GetAmount(item.OrderelyAllowence)</td>
                                <td>@UserFormat.GetAmount(item.Deduction)</td>
                                <td>@UserFormat.GetAmount(item.NetPension)</td>
                                <td>
                                    @if (lastMonthPensioner != null)
                                    {
                                        @UserFormat.GetAmount(lastMonthPensioner.NetPension)
                                    }
                                    else
                                    {
                                        <span>-</span>
                                    }
                                </td>
                                @if (item.CertificateVerified && item.PhysicallyVerified)
                                {
                                    netPayable += item.NetPension;
                                    <td>@UserFormat.GetAmount(item.NetPension)</td>
                                }
                                else
                                {
                                    <td>-</td>
                                }
                                <td>
                                    @if (Tempdifference > 0)
                                    {
                                        <i>+</i>
                                    }
                                    else if (Tempdifference < 0)
                                    {
                                        <i>-</i>
                                    }
                                    @UserFormat.GetAmount(Tempdifference)
                                </td>
                            </tr>
                            serial++;
                        }
                    </tbody>
                </table>
                <div id="table-footer">
                    <table class="table table-bordered">
                        <thead>
                            @{
                                var total = Model.PayablesThisMonth.Where(n => n.CertificateVerified && n.PhysicallyVerified).Sum(x => x.NetPension);
                                var difference = total - Model.LastMonthList.Sum(x => x.NetPension);
                            }
                            <tr>
                                <th>MP: @UserFormat.GetAmount(Model.PayablesThisMonth.Where(n => n.NetPension > 0).Sum(x => x.MonthlyPension))</th>
                                <th>CMA: @UserFormat.GetAmount(Model.PayablesThisMonth.Where(n => n.NetPension > 0).Sum(x => x.CMA))</th>
                                <th>Orderly: @UserFormat.GetAmount(Model.PayablesThisMonth.Where(n => n.NetPension > 0).Sum(x => x.OrderelyAllowence))</th>
                                <th>Deduction: @UserFormat.GetAmount(Model.PayablesThisMonth.Where(n => n.NetPension > 0).Sum(x => x.Deduction))</th>
                                <th>Total: @UserFormat.GetAmount(netPayable)</th>
                            </tr>
                            <tr>
                                <th colspan="7">Rupees: @Calculation.ConvertAmount((double)netPayable)</th>
                            </tr>
                        </thead>
                    </table>
                    <div>
                        <div class="container" style="margin-top: 70px;">
                            @if (Model.Session != null)
                            {
                                <div class="row">
                                    <div class="col-6">
                                        <p class="text-center">@Model.Session.AMStamp</p>
                                        <p class="text-center" style="margin-top: -20px;">@Model.Session.BaseStamp</p>
                                    </div>
                                    <div class="col-6">
                                        <div>
                                            <p class="text-center">@Model.Session.DMStamp</p>
                                            <p class="text-center" style="margin-top: -20px;">@Model.Session.BaseStamp</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        function verify(type, id, element) {
            if (!id) {
                alert("No record selected");
                return;
            }
            const url = type === "Certificate"
                ? "@Url.Action("VerifyCertificate")"
                : "@Url.Action("VerifyPhysically")";
            $.ajax({
                type: "POST",
                url: url,
                data: { Id: id },
                dataType: "text",
                success: function (msg) {
                    if (msg) {
                        $(element).hide();
                        $(element).parent().html("Verified");
                    }
                },
                error: function (req, status, error) {
                    alert(error);
                }
            });
        }

        $(document).ready(function () {
            $('#datatable-table').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'print',
                        footer: true,
                        customize: function (win) {
                            $(win.document.body).prepend($("#table-header").html());
                            $(win.document.body).append($("#table-footer").html());
                            $(win.document.body).find('table').addClass('compact').css('font-size', 'inherit');
                            var css = '@@page { size: landscape; }',
                                head = win.document.head || win.document.getElementsByTagName('head')[0],
                                style = win.document.createElement('style');
                            style.type = 'text/css';
                            style.media = 'print';
                            if (style.styleSheet) {
                                style.styleSheet.cssText = css;
                            } else {
                                style.appendChild(win.document.createTextNode(css));
                            }
                            head.appendChild(style);
                        },
                        title: '',
                        message: '',
                        exportOptions: {
                            columns: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
                        }
                    },
                    'excel', 'copy', 'csv', 'pdf'
                ],
                paging: true,
                lengthChange: true,
                searching: true,
                ordering: false,
                info: true,
            });
        });
    </script>
}
else
{
    <div class="alert alert-danger">No Pensioner Found!</div>
}