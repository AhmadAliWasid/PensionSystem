@using Pension.Entities.Helpers
@model PensionSystem.ViewModels.PensionerPaymentViewModel
@if (Model != null && Model.PayablesThisMonth != null && Model.LastMonthList != null)
{
    decimal TotalAmount = Model.AmountVerified;
    string relation = "";
    int relationId = 0;
    decimal difference = 0;
    decimal TotalDifference = 0;
    int serial = 1;
    <div class="card">
        <div class="card-header">
            <div class="card-title">
                <h4>Demand List</h4>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Bank</th>
                            <th>Amount</th>
                            <th>Count</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.BankDemandVMs != null)
                        {
                            decimal tTotal = 0;
                            int iCount = 0;
                            foreach (var item in Model.BankDemandVMs)
                            {
                                tTotal += item.Amount;
                                iCount += item.Count;
                                <tr>
                                    <td>@item.BankName</td>
                                    <td>@UserFormat.GetAmount(item.Amount)</td>
                                    <td>@item.Count</td>
                                </tr>
                            }
                            <tr>
                                <td>Total</td>
                                <td>@UserFormat.GetAmount(tTotal)</td>
                                <td>@iCount</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div id="list-pensioners">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Verified : @Model.Verified  & Amount: @UserFormat.GetAmount(Model.AmountVerified) </th>
                        </tr>
                    </thead>
                </table>
                <div id="table-header">
                    <div class="container">
                        @if (Model.Session != null)
                        {
                            <div class="row">
                                <div class="col-12">
                                    <h4 class="text-center">@Model.Session.DMStamp @Model.Session.BaseStamp</h4>
                                    <h5 class="text-center">List Of Pensioner for the Month of @UserFormat.GetMonthYear(Model.Month) </h5>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <table class="table table-bordered" id="datatable-table">
                    <thead>
                        <tr>
                            <th>Action</th>
                            <th>S#</th>
                            <th>PPO#</th>
                            <th>Claimant</th>
                            <th>Rel</th>
                            <th>Name.</th>
                            <th>Bank</th>
                            <th>MP</th>
                            <th>CMA</th>
                            <th>Orderly</th>
                            <th>Recovery</th>
                            <th>Net</th>
                            @*                             <th>Last Month</th>
                        <th>Difference</th> *@
                            <th>Remarks</th>
                            <th>Certificate</th>
                            <th>Physically</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.PayablesThisMonth)
                        {
                            var lastMonthPensioner = Model.LastMonthList.Where(x => x.PensionerId == item.PensionerId).FirstOrDefault();
                            if (lastMonthPensioner != null)
                                difference = item.NetPension - lastMonthPensioner.NetPension;
                            else
                                difference = item.NetPension;

                            TotalDifference += (difference);
                            relation = item.Pensioner.Relation.Short;
                            relationId = item.Pensioner.RelationId;
                            <tr style='color: @((item.CertificateVerified || item.NetPension == 0)? "green": "red")'>
                                <td><button class="btn btn-sm btn-warning" onclick="getUpdate(@item.Id)"><i class="fa fa-edit"></i> Edit</button></td>
                                <td>@serial</td>
                                <td>@item.Pensioner.PPOSystem</td>
                                <td>
                                    @if (relationId == 1)
                                    {
                                        <span>@item.Pensioner.Claimant - Ex. @item.Pensioner.Designation </span>
                                    }
                                    else
                                    {
                                        <span>@item.Pensioner.Claimant</span>
                                    }
                                </td>

                                <td>@item.Pensioner.Relation.Short</td>
                                <td>
                                    @if (relationId == 1)
                                    {
                                        <span>@item.Pensioner.FatherName</span>
                                    }
                                    else
                                    {
                                        <span>@item.Pensioner.Name Ex. @item.Pensioner.Designation</span>
                                    }
                                </td>
                                <td>@item.Pensioner.Branch.Bank.ShortName @item.Pensioner.Branch.Code-@item.Pensioner.AccountNumber</td>
                                <td>@UserFormat.GetAmount(item.MonthlyPension)</td>
                                <td>@UserFormat.GetAmount(item.CMA)</td>
                                <td>@UserFormat.GetAmount(item.OrderelyAllowence)</td>
                                <td>@UserFormat.GetAmount(item.Deduction)</td>
                                <td>@UserFormat.GetAmount(item.NetPension)</td>
                                @* remarks column *@
                                <td>
                                    @if (difference > 0)
                                    {
                                        <i>+</i>
                                    }
                                    else if (difference < 0)
                                    {
                                        <i>-</i>
                                    }
                                    @UserFormat.GetAmount(difference)
                                </td>

                                <td>
                                    @if (!item.CertificateVerified)
                                    {
                                        <button type="button" class="btn btn-block bg-gradient-primary" onclick="VerifyCertificate(@item.Id,this)"><i class="fas fa-check-square"></i> Verify</button>
                                    }
                                    else
                                    {
                                        <div class="text-green"><i class="fas fa-check-square"></i> Verified</div>
                                    }
                                </td>
                                <td>
                                    @if (item.PhysicallyVerified)
                                    {
                                        <span>Verified</span>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-block bg-gradient-warning" onclick="VerifyPhysically(@item.Id,this)"><i class="fas fa-check-circle"></i> Verify</button>
                                    }
                                </td>
                            </tr>
                            serial++;
                            difference = 0;
                        }

                    </tbody>

                </table>
                <div id="table-footer">
                    <table class="table table-bordered">
                        <thead>
                            @{
                                decimal Total = Model.PayablesThisMonth.Where(n => n.CertificateVerified == true && n.PhysicallyVerified == true).Sum(x => x.NetPension);
                                decimal Difference = Total - Model.LastMonthList.Sum(x => x.NetPension);
                                <tr>
                                    <th>MP : @UserFormat.GetAmount(Model.PayablesThisMonth.Where(n => n.NetPension > 0).Sum(x => x.MonthlyPension))</th>
                                    <th>CMA : @UserFormat.GetAmount(Model.PayablesThisMonth.Where(n => n.NetPension > 0).Sum(x => x.CMA))</th>
                                    <th>Orderly : @UserFormat.GetAmount(Model.PayablesThisMonth.Where(n => n.NetPension > 0).Sum(x => x.OrderelyAllowence))</th>
                                    <th>Deduction : @UserFormat.GetAmount(Model.PayablesThisMonth.Where(n => n.NetPension > 0).Sum(x => x.Deduction))</th>
                                    <th>Total : @UserFormat.GetAmount(Total)</th>
                                    @* /* <th>Last Month : @UserFormat.GetAmount(Model.LastMonthList.Sum(x => x.NetPension))</th> */
                            <th>Difference : @UserFormat.GetAmount(Difference)</th>*@
                                </tr>
                                <tr>
                                    <th colspan="7">Rupees : @Calculation.ConvertAmount((double)Total)</th>
                                </tr>
                            }
                        </thead>
                    </table>
                    <div>
                        <div class="container" style="margin-top: 70px;">
                            @if (Model.Session != null)
                            {
                                <div class="row">
                                    <div class="col-6">
                                        <p class="text-center">@Model.Session.AMStamp</p>
                                        <p class="text-center" style="margin-top: -20px;">@Model.Session.BaseStamp</p>
                                    </div>
                                    <div class="col-6">
                                        <div>
                                            <p class="text-center">@Model.Session.DMStamp</p>
                                            <p class="text-center" style="margin-top: -20px;">@Model.Session.BaseStamp</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        function VerifyCertificate(Id, element) {
            if (Id != "") {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("VerifyCertificate")",
                    data: { Id: Id },
                    dataType: "text",
                    success: function (msg) {
                        if (msg) {
                            $(element).hide();
                            $(element).parent().html("Verified");
                        }
                    },
                    error: function (req, status, error) {
                        alert(error);
                    }
                });
            }
            else {
                alert("no record selected")
            }
        }
        function VerifyPhysically(Id, element) {
            if (Id != "") {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("VerifyPhysically")",
                    data: { Id: Id },
                    dataType: "text",
                    success: function (msg) {
                        if (msg) {
                            $(element).hide();
                            $(element).parent().html("Verified");
                        }
                    },
                    error: function (req, status, error) {
                        alert(error);
                    }
                });
            }
            else {
                alert("no record selected")
            }
        }
        $(document).ready(function () {
            $('#datatable-table').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'print',
                        footer: true,
                        customize: function (win) {
                            $(win.document.body).prepend($("#table-header").html()); //after the table
                            $(win.document.body).append($("#table-footer").html()); //after the table
                            $(win.document.body).find('table').addClass('compact').css('font-size', 'inherit');
                            var last = null;
                            var current = null;
                            var bod = [];
                            var css = '@@page { size: landscape; }', head = win.document.head || win.document.getElementsByTagName('head')[0], style = win.document.createElement('style');
                            style.type = 'text/css';
                            style.media = 'print';
                            if (style.styleSheet) {
                                style.styleSheet.cssText = css;
                            }
                            else {
                                style.appendChild(win.document.createTextNode(css));
                            }
                            head.appendChild(style);
                        },
                        title: '',
                        message: '',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,12]
                        }
                    },
                    'excel',
                    'copy',
                    'csv',
                    'pdf'
                ],
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": false,
                "info": true,
            });
        });
    </script>

}
else
{
    <div class="alert alert-danger">No Pensioner Found!</div>
}